#!/usr/bin/python3
try:
    import requests, click, os, datetime
except ImportError:
    print("Fail to import modules make sure you have [ 'requests', 'click', 'os', 'datetime' ] modules installed")

FileServerUrl = "http://localhost:5000/api"
config = {}

@click.group()
@click.option("--password", "-P", default="", help="Pass User Password or you can export as variable FS_PASSWORD")
@click.option("--username", "-U", default="", help="Pass Username or you can export as variable FS_USERNAME")
@click.option("--product", "-p", help="Pass any product name")
@click.option("--version", "-v", help="Pass Product Version Value")
@click.option("--sub_prod", "-sp", help="Pass Sub Product version")
@click.option("--category","-c", help="Pass Category name")
@click.option("--sub_category", "-sc",  help="Pass Sub Category Name")
@click.option("--file", "-f", help="file path you want to upload on system is file in same dir then just give it's name.")
def fs_cli(password, username, product, version, sub_prod, category, sub_category, file):
    global config
    if os.environ.get("FILE_PASSWORD") and os.environ.get("FILE_USERNAME"):
        password = os.environ.get("FILE_PASSWORD")
        username = os.environ.get("FILE_USERNAME")
    config['password'], config['username'] = str(password), str(username)
    config['product'], config['version'], config['category'], config['sub_category'], config['sub_prod'], config['file'] = product, version, category, sub_category, sub_prod, file

@fs_cli.command()
def download():
    """
        This option is use to download files.
    """
    global FileServerUrl
    global config
    
    product, version, category, sub_category, sub_prod, file = config['product'], config['version'], config['category'], config['sub_category'], config['sub_prod'], config['file']
    FileServerUrl = os.path.join(FileServerUrl, "download")
    parameters = {'product': product, 'version': version, 'category':category, 'sub_prod':sub_prod, 'sub_category':sub_category, 'file': file}
    req = requests.get(FileServerUrl, params=parameters, auth=(config.get('username'), config.get('password')))
    if req.ok and "aviable_data_on_path" not in req.text:
        with open(file, "wb") as file_to_download:
            print("Downloading......")
            file_to_download.write(req.content)
        print("Download Compleat")
    else:
        print(req.text)

@fs_cli.command()
def upload():
    """
        This option is use to upload files.
    """
    global FileServerUrl
    global config

    product, version, category, sub_category, sub_prod, file = config['product'], config['version'], config['category'], config['sub_category'], config['sub_prod'], config['file']
    FileServerUrl = os.path.join(FileServerUrl, "upload")
    parameters = {'product': product, 'version': version, 'category':category, 'sub_prod':sub_prod, 'sub_category':sub_category, 'file': file}
    if file:
        if not os.path.exists(file):
            print("File path is not valid.")
            exit(1)
        with open(file, "rb") as file_to_upload:
            print("Uploading......")
            content = {'file': (file, file_to_upload.read())}
            req = requests.post(FileServerUrl, params=parameters, auth=(config.get('username'), config.get('password')), files=content)
            print(req.text)
    else:
        print("Please pass file path with --file flag")

if __name__ == "__main__":
    fs_cli()